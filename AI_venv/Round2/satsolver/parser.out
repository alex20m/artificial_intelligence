Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> spec
Rule 1     spec -> statement
Rule 2     spec -> statement spec
Rule 3     statement -> PREDICATES predlist SEMICOLON
Rule 4     predlist -> ID SLASH NUMBER
Rule 5     predlist -> ID SLASH NUMBER COMMA predlist
Rule 6     statement -> VARIABLES idlist SEMICOLON
Rule 7     idlist -> ID
Rule 8     idlist -> ID COMMA idlist
Rule 9     statement -> TYPE ID EQ setexpr SEMICOLON
Rule 10    statement -> boolexpr SEMICOLON
Rule 11    setexpr -> LBRACK NUMBER COMMA NUMBER RBRACK
Rule 12    setexpr -> LBRACE stringlist RBRACE
Rule 13    setexpr -> ID
Rule 14    stringlist -> enum
Rule 15    enum -> ID
Rule 16    enum -> NUMBER
Rule 17    stringlist -> enum COMMA stringlist
Rule 18    boolexpr -> boolexpr AND boolexpr
Rule 19    boolexpr -> boolexpr OR boolexpr
Rule 20    boolexpr -> boolexpr XOR boolexpr
Rule 21    boolexpr -> boolexpr IMPL boolexpr
Rule 22    boolexpr -> boolexpr EQVI boolexpr
Rule 23    boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr
Rule 24    boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr
Rule 25    boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
Rule 26    boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
Rule 27    boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
Rule 28    boolexpr -> NOT boolexpr
Rule 29    boolexpr -> atom
Rule 30    boolexpr -> LPAREN boolexpr RPAREN
Rule 31    boolexpr -> numexpr GT numexpr
Rule 32    boolexpr -> numexpr LT numexpr
Rule 33    boolexpr -> numexpr GEQ numexpr
Rule 34    boolexpr -> numexpr LEQ numexpr
Rule 35    boolexpr -> numexpr EQ numexpr
Rule 36    paramlist -> param
Rule 37    paramlist -> param COMMA paramlist
Rule 38    param -> ID COLON setexpr
Rule 39    numexpr -> LPAREN numexpr RPAREN
Rule 40    numexpr -> NUMBER
Rule 41    numexpr -> NID
Rule 42    numexpr -> numexpr PLUS numexpr
Rule 43    numexpr -> numexpr MINUS numexpr
Rule 44    numexpr -> numexpr TIMES numexpr
Rule 45    termlist -> term COMMA termlist
Rule 46    termlist -> term
Rule 47    term -> numexpr
Rule 48    atom -> ID
Rule 49    atom -> ID LPAREN termlist RPAREN

Terminals, with rules where they appear

AND                  : 18
ATLEAST              : 26
ATMOST               : 25
COLON                : 38
COMMA                : 5 8 11 17 37 45
EQ                   : 9 35
EQVI                 : 22
EXACTLY              : 27
FORALL               : 24
FORSOME              : 23
GEQ                  : 33
GT                   : 31
ID                   : 4 5 7 8 9 13 15 38 48 49
IMPL                 : 21
LBRACE               : 12
LBRACK               : 11
LEQ                  : 34
LPAREN               : 23 24 25 26 27 30 39 49
LT                   : 32
MINUS                : 43
NID                  : 41
NOT                  : 28
NUMBER               : 4 5 11 11 16 25 26 27 40
OR                   : 19
PLUS                 : 42
PREDICATES           : 3
RBRACE               : 12
RBRACK               : 11
RPAREN               : 23 24 25 26 27 30 39 49
SEMICOLON            : 3 6 9 10
SLASH                : 4 5
TIMES                : 44
TYPE                 : 9
VARIABLES            : 6
XOR                  : 20
error                : 

Nonterminals, with rules where they appear

atom                 : 29
boolexpr             : 10 18 18 19 19 20 20 21 21 22 22 23 24 25 26 27 28 30
enum                 : 14 17
idlist               : 6 8
numexpr              : 31 31 32 32 33 33 34 34 35 35 39 42 42 43 43 44 44 47
param                : 36 37
paramlist            : 23 24 25 26 27 37
predlist             : 3 5
setexpr              : 9 38
spec                 : 2 0
statement            : 1 2
stringlist           : 12 17
term                 : 45 46
termlist             : 45 49

Parsing method: LALR

state 0

    (0) S' -> . spec
    (1) spec -> . statement
    (2) spec -> . statement spec
    (3) statement -> . PREDICATES predlist SEMICOLON
    (6) statement -> . VARIABLES idlist SEMICOLON
    (9) statement -> . TYPE ID EQ setexpr SEMICOLON
    (10) statement -> . boolexpr SEMICOLON
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    PREDICATES      shift and go to state 3
    VARIABLES       shift and go to state 4
    TYPE            shift and go to state 5
    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    spec                           shift and go to state 1
    statement                      shift and go to state 2
    boolexpr                       shift and go to state 7
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 1

    (0) S' -> spec .



state 2

    (1) spec -> statement .
    (2) spec -> statement . spec
    (1) spec -> . statement
    (2) spec -> . statement spec
    (3) statement -> . PREDICATES predlist SEMICOLON
    (6) statement -> . VARIABLES idlist SEMICOLON
    (9) statement -> . TYPE ID EQ setexpr SEMICOLON
    (10) statement -> . boolexpr SEMICOLON
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    $end            reduce using rule 1 (spec -> statement .)
    PREDICATES      shift and go to state 3
    VARIABLES       shift and go to state 4
    TYPE            shift and go to state 5
    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    statement                      shift and go to state 2
    spec                           shift and go to state 19
    boolexpr                       shift and go to state 7
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 3

    (3) statement -> PREDICATES . predlist SEMICOLON
    (4) predlist -> . ID SLASH NUMBER
    (5) predlist -> . ID SLASH NUMBER COMMA predlist

    ID              shift and go to state 21

    predlist                       shift and go to state 20

state 4

    (6) statement -> VARIABLES . idlist SEMICOLON
    (7) idlist -> . ID
    (8) idlist -> . ID COMMA idlist

    ID              shift and go to state 23

    idlist                         shift and go to state 22

state 5

    (9) statement -> TYPE . ID EQ setexpr SEMICOLON

    ID              shift and go to state 24


state 6

    (48) atom -> ID .
    (49) atom -> ID . LPAREN termlist RPAREN

    SEMICOLON       reduce using rule 48 (atom -> ID .)
    AND             reduce using rule 48 (atom -> ID .)
    OR              reduce using rule 48 (atom -> ID .)
    XOR             reduce using rule 48 (atom -> ID .)
    IMPL            reduce using rule 48 (atom -> ID .)
    EQVI            reduce using rule 48 (atom -> ID .)
    RPAREN          reduce using rule 48 (atom -> ID .)
    LPAREN          shift and go to state 25


state 7

    (10) statement -> boolexpr . SEMICOLON
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       shift and go to state 26
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31


state 8

    (23) boolexpr -> FORSOME . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 32


state 9

    (30) boolexpr -> LPAREN . boolexpr RPAREN
    (39) numexpr -> LPAREN . numexpr RPAREN
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 12
    NID             shift and go to state 18
    ID              shift and go to state 6

    boolexpr                       shift and go to state 33
    numexpr                        shift and go to state 34
    atom                           shift and go to state 16

state 10

    (24) boolexpr -> FORALL . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 35


state 11

    (25) boolexpr -> ATMOST . NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 36


state 12

    (40) numexpr -> NUMBER .

    GT              reduce using rule 40 (numexpr -> NUMBER .)
    LT              reduce using rule 40 (numexpr -> NUMBER .)
    GEQ             reduce using rule 40 (numexpr -> NUMBER .)
    LEQ             reduce using rule 40 (numexpr -> NUMBER .)
    EQ              reduce using rule 40 (numexpr -> NUMBER .)
    PLUS            reduce using rule 40 (numexpr -> NUMBER .)
    MINUS           reduce using rule 40 (numexpr -> NUMBER .)
    TIMES           reduce using rule 40 (numexpr -> NUMBER .)
    RPAREN          reduce using rule 40 (numexpr -> NUMBER .)
    COMMA           reduce using rule 40 (numexpr -> NUMBER .)
    SEMICOLON       reduce using rule 40 (numexpr -> NUMBER .)
    AND             reduce using rule 40 (numexpr -> NUMBER .)
    OR              reduce using rule 40 (numexpr -> NUMBER .)
    XOR             reduce using rule 40 (numexpr -> NUMBER .)
    IMPL            reduce using rule 40 (numexpr -> NUMBER .)
    EQVI            reduce using rule 40 (numexpr -> NUMBER .)


state 13

    (26) boolexpr -> ATLEAST . NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 37


state 14

    (27) boolexpr -> EXACTLY . NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 38


state 15

    (28) boolexpr -> NOT . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 39
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 16

    (29) boolexpr -> atom .

    SEMICOLON       reduce using rule 29 (boolexpr -> atom .)
    AND             reduce using rule 29 (boolexpr -> atom .)
    OR              reduce using rule 29 (boolexpr -> atom .)
    XOR             reduce using rule 29 (boolexpr -> atom .)
    IMPL            reduce using rule 29 (boolexpr -> atom .)
    EQVI            reduce using rule 29 (boolexpr -> atom .)
    RPAREN          reduce using rule 29 (boolexpr -> atom .)


state 17

    (31) boolexpr -> numexpr . GT numexpr
    (32) boolexpr -> numexpr . LT numexpr
    (33) boolexpr -> numexpr . GEQ numexpr
    (34) boolexpr -> numexpr . LEQ numexpr
    (35) boolexpr -> numexpr . EQ numexpr
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    GT              shift and go to state 40
    LT              shift and go to state 41
    GEQ             shift and go to state 42
    LEQ             shift and go to state 43
    EQ              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 18

    (41) numexpr -> NID .

    GT              reduce using rule 41 (numexpr -> NID .)
    LT              reduce using rule 41 (numexpr -> NID .)
    GEQ             reduce using rule 41 (numexpr -> NID .)
    LEQ             reduce using rule 41 (numexpr -> NID .)
    EQ              reduce using rule 41 (numexpr -> NID .)
    PLUS            reduce using rule 41 (numexpr -> NID .)
    MINUS           reduce using rule 41 (numexpr -> NID .)
    TIMES           reduce using rule 41 (numexpr -> NID .)
    RPAREN          reduce using rule 41 (numexpr -> NID .)
    COMMA           reduce using rule 41 (numexpr -> NID .)
    SEMICOLON       reduce using rule 41 (numexpr -> NID .)
    AND             reduce using rule 41 (numexpr -> NID .)
    OR              reduce using rule 41 (numexpr -> NID .)
    XOR             reduce using rule 41 (numexpr -> NID .)
    IMPL            reduce using rule 41 (numexpr -> NID .)
    EQVI            reduce using rule 41 (numexpr -> NID .)


state 19

    (2) spec -> statement spec .

    $end            reduce using rule 2 (spec -> statement spec .)


state 20

    (3) statement -> PREDICATES predlist . SEMICOLON

    SEMICOLON       shift and go to state 48


state 21

    (4) predlist -> ID . SLASH NUMBER
    (5) predlist -> ID . SLASH NUMBER COMMA predlist

    SLASH           shift and go to state 49


state 22

    (6) statement -> VARIABLES idlist . SEMICOLON

    SEMICOLON       shift and go to state 50


state 23

    (7) idlist -> ID .
    (8) idlist -> ID . COMMA idlist

    SEMICOLON       reduce using rule 7 (idlist -> ID .)
    COMMA           shift and go to state 51


state 24

    (9) statement -> TYPE ID . EQ setexpr SEMICOLON

    EQ              shift and go to state 52


state 25

    (49) atom -> ID LPAREN . termlist RPAREN
    (45) termlist -> . term COMMA termlist
    (46) termlist -> . term
    (47) term -> . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    termlist                       shift and go to state 54
    term                           shift and go to state 55
    numexpr                        shift and go to state 56

state 26

    (10) statement -> boolexpr SEMICOLON .

    PREDICATES      reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    VARIABLES       reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    TYPE            reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    FORSOME         reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    FORALL          reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    ATMOST          reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    ATLEAST         reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    EXACTLY         reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    NOT             reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    LPAREN          reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    ID              reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    NUMBER          reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    NID             reduce using rule 10 (statement -> boolexpr SEMICOLON .)
    $end            reduce using rule 10 (statement -> boolexpr SEMICOLON .)


state 27

    (18) boolexpr -> boolexpr AND . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 57
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 28

    (19) boolexpr -> boolexpr OR . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 58
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 29

    (20) boolexpr -> boolexpr XOR . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 59
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 30

    (21) boolexpr -> boolexpr IMPL . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 60
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 31

    (22) boolexpr -> boolexpr EQVI . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 61
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 32

    (23) boolexpr -> FORSOME LPAREN . paramlist RPAREN boolexpr
    (36) paramlist -> . param
    (37) paramlist -> . param COMMA paramlist
    (38) param -> . ID COLON setexpr

    ID              shift and go to state 64

    paramlist                      shift and go to state 62
    param                          shift and go to state 63

state 33

    (30) boolexpr -> LPAREN boolexpr . RPAREN
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    RPAREN          shift and go to state 65
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31


state 34

    (39) numexpr -> LPAREN numexpr . RPAREN
    (31) boolexpr -> numexpr . GT numexpr
    (32) boolexpr -> numexpr . LT numexpr
    (33) boolexpr -> numexpr . GEQ numexpr
    (34) boolexpr -> numexpr . LEQ numexpr
    (35) boolexpr -> numexpr . EQ numexpr
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    RPAREN          shift and go to state 66
    GT              shift and go to state 40
    LT              shift and go to state 41
    GEQ             shift and go to state 42
    LEQ             shift and go to state 43
    EQ              shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 35

    (24) boolexpr -> FORALL LPAREN . paramlist RPAREN boolexpr
    (36) paramlist -> . param
    (37) paramlist -> . param COMMA paramlist
    (38) param -> . ID COLON setexpr

    ID              shift and go to state 64

    paramlist                      shift and go to state 67
    param                          shift and go to state 63

state 36

    (25) boolexpr -> ATMOST NUMBER . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 68


state 37

    (26) boolexpr -> ATLEAST NUMBER . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 69


state 38

    (27) boolexpr -> EXACTLY NUMBER . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 70


state 39

    (28) boolexpr -> NOT boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 28 (boolexpr -> NOT boolexpr .)
    AND             reduce using rule 28 (boolexpr -> NOT boolexpr .)
    OR              reduce using rule 28 (boolexpr -> NOT boolexpr .)
    XOR             reduce using rule 28 (boolexpr -> NOT boolexpr .)
    IMPL            reduce using rule 28 (boolexpr -> NOT boolexpr .)
    EQVI            reduce using rule 28 (boolexpr -> NOT boolexpr .)
    RPAREN          reduce using rule 28 (boolexpr -> NOT boolexpr .)

  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 28 ]
  ! XOR             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! EQVI            [ shift and go to state 31 ]


state 40

    (31) boolexpr -> numexpr GT . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 71

state 41

    (32) boolexpr -> numexpr LT . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 72

state 42

    (33) boolexpr -> numexpr GEQ . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 73

state 43

    (34) boolexpr -> numexpr LEQ . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 74

state 44

    (35) boolexpr -> numexpr EQ . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 75

state 45

    (42) numexpr -> numexpr PLUS . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 76

state 46

    (43) numexpr -> numexpr MINUS . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 77

state 47

    (44) numexpr -> numexpr TIMES . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 78

state 48

    (3) statement -> PREDICATES predlist SEMICOLON .

    PREDICATES      reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    VARIABLES       reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    TYPE            reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    FORSOME         reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    FORALL          reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    ATMOST          reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    ATLEAST         reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    EXACTLY         reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    NOT             reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    LPAREN          reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    ID              reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    NUMBER          reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    NID             reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)
    $end            reduce using rule 3 (statement -> PREDICATES predlist SEMICOLON .)


state 49

    (4) predlist -> ID SLASH . NUMBER
    (5) predlist -> ID SLASH . NUMBER COMMA predlist

    NUMBER          shift and go to state 79


state 50

    (6) statement -> VARIABLES idlist SEMICOLON .

    PREDICATES      reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    VARIABLES       reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    TYPE            reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    FORSOME         reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    FORALL          reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    ATMOST          reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    ATLEAST         reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    EXACTLY         reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    NOT             reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    LPAREN          reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    ID              reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    NID             reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)
    $end            reduce using rule 6 (statement -> VARIABLES idlist SEMICOLON .)


state 51

    (8) idlist -> ID COMMA . idlist
    (7) idlist -> . ID
    (8) idlist -> . ID COMMA idlist

    ID              shift and go to state 23

    idlist                         shift and go to state 80

state 52

    (9) statement -> TYPE ID EQ . setexpr SEMICOLON
    (11) setexpr -> . LBRACK NUMBER COMMA NUMBER RBRACK
    (12) setexpr -> . LBRACE stringlist RBRACE
    (13) setexpr -> . ID

    LBRACK          shift and go to state 83
    LBRACE          shift and go to state 84
    ID              shift and go to state 81

    setexpr                        shift and go to state 82

state 53

    (39) numexpr -> LPAREN . numexpr RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    numexpr                        shift and go to state 85

state 54

    (49) atom -> ID LPAREN termlist . RPAREN

    RPAREN          shift and go to state 86


state 55

    (45) termlist -> term . COMMA termlist
    (46) termlist -> term .

    COMMA           shift and go to state 87
    RPAREN          reduce using rule 46 (termlist -> term .)


state 56

    (47) term -> numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    COMMA           reduce using rule 47 (term -> numexpr .)
    RPAREN          reduce using rule 47 (term -> numexpr .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 57

    (18) boolexpr -> boolexpr AND boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 18 (boolexpr -> boolexpr AND boolexpr .)
    AND             reduce using rule 18 (boolexpr -> boolexpr AND boolexpr .)
    OR              reduce using rule 18 (boolexpr -> boolexpr AND boolexpr .)
    XOR             reduce using rule 18 (boolexpr -> boolexpr AND boolexpr .)
    IMPL            reduce using rule 18 (boolexpr -> boolexpr AND boolexpr .)
    EQVI            reduce using rule 18 (boolexpr -> boolexpr AND boolexpr .)
    RPAREN          reduce using rule 18 (boolexpr -> boolexpr AND boolexpr .)

  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 28 ]
  ! XOR             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! EQVI            [ shift and go to state 31 ]


state 58

    (19) boolexpr -> boolexpr OR boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 19 (boolexpr -> boolexpr OR boolexpr .)
    AND             reduce using rule 19 (boolexpr -> boolexpr OR boolexpr .)
    OR              reduce using rule 19 (boolexpr -> boolexpr OR boolexpr .)
    XOR             reduce using rule 19 (boolexpr -> boolexpr OR boolexpr .)
    IMPL            reduce using rule 19 (boolexpr -> boolexpr OR boolexpr .)
    EQVI            reduce using rule 19 (boolexpr -> boolexpr OR boolexpr .)
    RPAREN          reduce using rule 19 (boolexpr -> boolexpr OR boolexpr .)

  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 28 ]
  ! XOR             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! EQVI            [ shift and go to state 31 ]


state 59

    (20) boolexpr -> boolexpr XOR boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 20 (boolexpr -> boolexpr XOR boolexpr .)
    AND             reduce using rule 20 (boolexpr -> boolexpr XOR boolexpr .)
    OR              reduce using rule 20 (boolexpr -> boolexpr XOR boolexpr .)
    XOR             reduce using rule 20 (boolexpr -> boolexpr XOR boolexpr .)
    IMPL            reduce using rule 20 (boolexpr -> boolexpr XOR boolexpr .)
    EQVI            reduce using rule 20 (boolexpr -> boolexpr XOR boolexpr .)
    RPAREN          reduce using rule 20 (boolexpr -> boolexpr XOR boolexpr .)

  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 28 ]
  ! XOR             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! EQVI            [ shift and go to state 31 ]


state 60

    (21) boolexpr -> boolexpr IMPL boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 21 (boolexpr -> boolexpr IMPL boolexpr .)
    EQVI            reduce using rule 21 (boolexpr -> boolexpr IMPL boolexpr .)
    RPAREN          reduce using rule 21 (boolexpr -> boolexpr IMPL boolexpr .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30

  ! AND             [ reduce using rule 21 (boolexpr -> boolexpr IMPL boolexpr .) ]
  ! OR              [ reduce using rule 21 (boolexpr -> boolexpr IMPL boolexpr .) ]
  ! XOR             [ reduce using rule 21 (boolexpr -> boolexpr IMPL boolexpr .) ]
  ! IMPL            [ reduce using rule 21 (boolexpr -> boolexpr IMPL boolexpr .) ]
  ! EQVI            [ shift and go to state 31 ]


state 61

    (22) boolexpr -> boolexpr EQVI boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 22 (boolexpr -> boolexpr EQVI boolexpr .)
    RPAREN          reduce using rule 22 (boolexpr -> boolexpr EQVI boolexpr .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31

  ! AND             [ reduce using rule 22 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! OR              [ reduce using rule 22 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! XOR             [ reduce using rule 22 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! IMPL            [ reduce using rule 22 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! EQVI            [ reduce using rule 22 (boolexpr -> boolexpr EQVI boolexpr .) ]


state 62

    (23) boolexpr -> FORSOME LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 88


state 63

    (36) paramlist -> param .
    (37) paramlist -> param . COMMA paramlist

    RPAREN          reduce using rule 36 (paramlist -> param .)
    COMMA           shift and go to state 89


state 64

    (38) param -> ID . COLON setexpr

    COLON           shift and go to state 90


state 65

    (30) boolexpr -> LPAREN boolexpr RPAREN .

    SEMICOLON       reduce using rule 30 (boolexpr -> LPAREN boolexpr RPAREN .)
    AND             reduce using rule 30 (boolexpr -> LPAREN boolexpr RPAREN .)
    OR              reduce using rule 30 (boolexpr -> LPAREN boolexpr RPAREN .)
    XOR             reduce using rule 30 (boolexpr -> LPAREN boolexpr RPAREN .)
    IMPL            reduce using rule 30 (boolexpr -> LPAREN boolexpr RPAREN .)
    EQVI            reduce using rule 30 (boolexpr -> LPAREN boolexpr RPAREN .)
    RPAREN          reduce using rule 30 (boolexpr -> LPAREN boolexpr RPAREN .)


state 66

    (39) numexpr -> LPAREN numexpr RPAREN .

    GT              reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    LT              reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    GEQ             reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    LEQ             reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    EQ              reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    PLUS            reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    MINUS           reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    TIMES           reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    RPAREN          reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    COMMA           reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    SEMICOLON       reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    AND             reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    OR              reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    XOR             reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    IMPL            reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)
    EQVI            reduce using rule 39 (numexpr -> LPAREN numexpr RPAREN .)


state 67

    (24) boolexpr -> FORALL LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 91


state 68

    (25) boolexpr -> ATMOST NUMBER LPAREN . paramlist RPAREN boolexpr
    (36) paramlist -> . param
    (37) paramlist -> . param COMMA paramlist
    (38) param -> . ID COLON setexpr

    ID              shift and go to state 64

    paramlist                      shift and go to state 92
    param                          shift and go to state 63

state 69

    (26) boolexpr -> ATLEAST NUMBER LPAREN . paramlist RPAREN boolexpr
    (36) paramlist -> . param
    (37) paramlist -> . param COMMA paramlist
    (38) param -> . ID COLON setexpr

    ID              shift and go to state 64

    paramlist                      shift and go to state 93
    param                          shift and go to state 63

state 70

    (27) boolexpr -> EXACTLY NUMBER LPAREN . paramlist RPAREN boolexpr
    (36) paramlist -> . param
    (37) paramlist -> . param COMMA paramlist
    (38) param -> . ID COLON setexpr

    ID              shift and go to state 64

    paramlist                      shift and go to state 94
    param                          shift and go to state 63

state 71

    (31) boolexpr -> numexpr GT numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    SEMICOLON       reduce using rule 31 (boolexpr -> numexpr GT numexpr .)
    AND             reduce using rule 31 (boolexpr -> numexpr GT numexpr .)
    OR              reduce using rule 31 (boolexpr -> numexpr GT numexpr .)
    XOR             reduce using rule 31 (boolexpr -> numexpr GT numexpr .)
    IMPL            reduce using rule 31 (boolexpr -> numexpr GT numexpr .)
    EQVI            reduce using rule 31 (boolexpr -> numexpr GT numexpr .)
    RPAREN          reduce using rule 31 (boolexpr -> numexpr GT numexpr .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 72

    (32) boolexpr -> numexpr LT numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    SEMICOLON       reduce using rule 32 (boolexpr -> numexpr LT numexpr .)
    AND             reduce using rule 32 (boolexpr -> numexpr LT numexpr .)
    OR              reduce using rule 32 (boolexpr -> numexpr LT numexpr .)
    XOR             reduce using rule 32 (boolexpr -> numexpr LT numexpr .)
    IMPL            reduce using rule 32 (boolexpr -> numexpr LT numexpr .)
    EQVI            reduce using rule 32 (boolexpr -> numexpr LT numexpr .)
    RPAREN          reduce using rule 32 (boolexpr -> numexpr LT numexpr .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 73

    (33) boolexpr -> numexpr GEQ numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    SEMICOLON       reduce using rule 33 (boolexpr -> numexpr GEQ numexpr .)
    AND             reduce using rule 33 (boolexpr -> numexpr GEQ numexpr .)
    OR              reduce using rule 33 (boolexpr -> numexpr GEQ numexpr .)
    XOR             reduce using rule 33 (boolexpr -> numexpr GEQ numexpr .)
    IMPL            reduce using rule 33 (boolexpr -> numexpr GEQ numexpr .)
    EQVI            reduce using rule 33 (boolexpr -> numexpr GEQ numexpr .)
    RPAREN          reduce using rule 33 (boolexpr -> numexpr GEQ numexpr .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 74

    (34) boolexpr -> numexpr LEQ numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    SEMICOLON       reduce using rule 34 (boolexpr -> numexpr LEQ numexpr .)
    AND             reduce using rule 34 (boolexpr -> numexpr LEQ numexpr .)
    OR              reduce using rule 34 (boolexpr -> numexpr LEQ numexpr .)
    XOR             reduce using rule 34 (boolexpr -> numexpr LEQ numexpr .)
    IMPL            reduce using rule 34 (boolexpr -> numexpr LEQ numexpr .)
    EQVI            reduce using rule 34 (boolexpr -> numexpr LEQ numexpr .)
    RPAREN          reduce using rule 34 (boolexpr -> numexpr LEQ numexpr .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 75

    (35) boolexpr -> numexpr EQ numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    SEMICOLON       reduce using rule 35 (boolexpr -> numexpr EQ numexpr .)
    AND             reduce using rule 35 (boolexpr -> numexpr EQ numexpr .)
    OR              reduce using rule 35 (boolexpr -> numexpr EQ numexpr .)
    XOR             reduce using rule 35 (boolexpr -> numexpr EQ numexpr .)
    IMPL            reduce using rule 35 (boolexpr -> numexpr EQ numexpr .)
    EQVI            reduce using rule 35 (boolexpr -> numexpr EQ numexpr .)
    RPAREN          reduce using rule 35 (boolexpr -> numexpr EQ numexpr .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 76

    (42) numexpr -> numexpr PLUS numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    GT              reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    LT              reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    GEQ             reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    LEQ             reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    EQ              reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    PLUS            reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    MINUS           reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    RPAREN          reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    COMMA           reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    SEMICOLON       reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    AND             reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    OR              reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    XOR             reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    IMPL            reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    EQVI            reduce using rule 42 (numexpr -> numexpr PLUS numexpr .)
    TIMES           shift and go to state 47

  ! TIMES           [ reduce using rule 42 (numexpr -> numexpr PLUS numexpr .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]


state 77

    (43) numexpr -> numexpr MINUS numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    GT              reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    LT              reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    GEQ             reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    LEQ             reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    EQ              reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    PLUS            reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    MINUS           reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    RPAREN          reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    COMMA           reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    SEMICOLON       reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    AND             reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    OR              reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    XOR             reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    IMPL            reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    EQVI            reduce using rule 43 (numexpr -> numexpr MINUS numexpr .)
    TIMES           shift and go to state 47

  ! TIMES           [ reduce using rule 43 (numexpr -> numexpr MINUS numexpr .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]


state 78

    (44) numexpr -> numexpr TIMES numexpr .
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    GT              reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    LT              reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    GEQ             reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    LEQ             reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    EQ              reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    PLUS            reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    MINUS           reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    TIMES           reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    RPAREN          reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    COMMA           reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    SEMICOLON       reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    AND             reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    OR              reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    XOR             reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    IMPL            reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)
    EQVI            reduce using rule 44 (numexpr -> numexpr TIMES numexpr .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]


state 79

    (4) predlist -> ID SLASH NUMBER .
    (5) predlist -> ID SLASH NUMBER . COMMA predlist

    SEMICOLON       reduce using rule 4 (predlist -> ID SLASH NUMBER .)
    COMMA           shift and go to state 95


state 80

    (8) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 8 (idlist -> ID COMMA idlist .)


state 81

    (13) setexpr -> ID .

    SEMICOLON       reduce using rule 13 (setexpr -> ID .)
    COMMA           reduce using rule 13 (setexpr -> ID .)
    RPAREN          reduce using rule 13 (setexpr -> ID .)


state 82

    (9) statement -> TYPE ID EQ setexpr . SEMICOLON

    SEMICOLON       shift and go to state 96


state 83

    (11) setexpr -> LBRACK . NUMBER COMMA NUMBER RBRACK

    NUMBER          shift and go to state 97


state 84

    (12) setexpr -> LBRACE . stringlist RBRACE
    (14) stringlist -> . enum
    (17) stringlist -> . enum COMMA stringlist
    (15) enum -> . ID
    (16) enum -> . NUMBER

    ID              shift and go to state 100
    NUMBER          shift and go to state 101

    stringlist                     shift and go to state 98
    enum                           shift and go to state 99

state 85

    (39) numexpr -> LPAREN numexpr . RPAREN
    (42) numexpr -> numexpr . PLUS numexpr
    (43) numexpr -> numexpr . MINUS numexpr
    (44) numexpr -> numexpr . TIMES numexpr

    RPAREN          shift and go to state 66
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47


state 86

    (49) atom -> ID LPAREN termlist RPAREN .

    SEMICOLON       reduce using rule 49 (atom -> ID LPAREN termlist RPAREN .)
    AND             reduce using rule 49 (atom -> ID LPAREN termlist RPAREN .)
    OR              reduce using rule 49 (atom -> ID LPAREN termlist RPAREN .)
    XOR             reduce using rule 49 (atom -> ID LPAREN termlist RPAREN .)
    IMPL            reduce using rule 49 (atom -> ID LPAREN termlist RPAREN .)
    EQVI            reduce using rule 49 (atom -> ID LPAREN termlist RPAREN .)
    RPAREN          reduce using rule 49 (atom -> ID LPAREN termlist RPAREN .)


state 87

    (45) termlist -> term COMMA . termlist
    (45) termlist -> . term COMMA termlist
    (46) termlist -> . term
    (47) term -> . numexpr
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    term                           shift and go to state 55
    termlist                       shift and go to state 102
    numexpr                        shift and go to state 56

state 88

    (23) boolexpr -> FORSOME LPAREN paramlist RPAREN . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 103
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 89

    (37) paramlist -> param COMMA . paramlist
    (36) paramlist -> . param
    (37) paramlist -> . param COMMA paramlist
    (38) param -> . ID COLON setexpr

    ID              shift and go to state 64

    param                          shift and go to state 63
    paramlist                      shift and go to state 104

state 90

    (38) param -> ID COLON . setexpr
    (11) setexpr -> . LBRACK NUMBER COMMA NUMBER RBRACK
    (12) setexpr -> . LBRACE stringlist RBRACE
    (13) setexpr -> . ID

    LBRACK          shift and go to state 83
    LBRACE          shift and go to state 84
    ID              shift and go to state 81

    setexpr                        shift and go to state 105

state 91

    (24) boolexpr -> FORALL LPAREN paramlist RPAREN . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 106
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 92

    (25) boolexpr -> ATMOST NUMBER LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 107


state 93

    (26) boolexpr -> ATLEAST NUMBER LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 108


state 94

    (27) boolexpr -> EXACTLY NUMBER LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 109


state 95

    (5) predlist -> ID SLASH NUMBER COMMA . predlist
    (4) predlist -> . ID SLASH NUMBER
    (5) predlist -> . ID SLASH NUMBER COMMA predlist

    ID              shift and go to state 21

    predlist                       shift and go to state 110

state 96

    (9) statement -> TYPE ID EQ setexpr SEMICOLON .

    PREDICATES      reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    VARIABLES       reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    TYPE            reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    FORSOME         reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    FORALL          reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    ATMOST          reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    ATLEAST         reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    EXACTLY         reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    NOT             reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    LPAREN          reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    ID              reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    NUMBER          reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    NID             reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    $end            reduce using rule 9 (statement -> TYPE ID EQ setexpr SEMICOLON .)


state 97

    (11) setexpr -> LBRACK NUMBER . COMMA NUMBER RBRACK

    COMMA           shift and go to state 111


state 98

    (12) setexpr -> LBRACE stringlist . RBRACE

    RBRACE          shift and go to state 112


state 99

    (14) stringlist -> enum .
    (17) stringlist -> enum . COMMA stringlist

    RBRACE          reduce using rule 14 (stringlist -> enum .)
    COMMA           shift and go to state 113


state 100

    (15) enum -> ID .

    COMMA           reduce using rule 15 (enum -> ID .)
    RBRACE          reduce using rule 15 (enum -> ID .)


state 101

    (16) enum -> NUMBER .

    COMMA           reduce using rule 16 (enum -> NUMBER .)
    RBRACE          reduce using rule 16 (enum -> NUMBER .)


state 102

    (45) termlist -> term COMMA termlist .

    RPAREN          reduce using rule 45 (termlist -> term COMMA termlist .)


state 103

    (23) boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IMPL resolved as shift
  ! shift/reduce conflict for EQVI resolved as shift
    SEMICOLON       reduce using rule 23 (boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 23 (boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31

  ! AND             [ reduce using rule 23 (boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 23 (boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .) ]
  ! XOR             [ reduce using rule 23 (boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 23 (boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 23 (boolexpr -> FORSOME LPAREN paramlist RPAREN boolexpr .) ]


state 104

    (37) paramlist -> param COMMA paramlist .

    RPAREN          reduce using rule 37 (paramlist -> param COMMA paramlist .)


state 105

    (38) param -> ID COLON setexpr .

    COMMA           reduce using rule 38 (param -> ID COLON setexpr .)
    RPAREN          reduce using rule 38 (param -> ID COLON setexpr .)


state 106

    (24) boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IMPL resolved as shift
  ! shift/reduce conflict for EQVI resolved as shift
    SEMICOLON       reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31

  ! AND             [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]
  ! XOR             [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]


state 107

    (25) boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 114
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 108

    (26) boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 115
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 109

    (27) boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN . boolexpr
    (18) boolexpr -> . boolexpr AND boolexpr
    (19) boolexpr -> . boolexpr OR boolexpr
    (20) boolexpr -> . boolexpr XOR boolexpr
    (21) boolexpr -> . boolexpr IMPL boolexpr
    (22) boolexpr -> . boolexpr EQVI boolexpr
    (23) boolexpr -> . FORSOME LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (26) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (27) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (28) boolexpr -> . NOT boolexpr
    (29) boolexpr -> . atom
    (30) boolexpr -> . LPAREN boolexpr RPAREN
    (31) boolexpr -> . numexpr GT numexpr
    (32) boolexpr -> . numexpr LT numexpr
    (33) boolexpr -> . numexpr GEQ numexpr
    (34) boolexpr -> . numexpr LEQ numexpr
    (35) boolexpr -> . numexpr EQ numexpr
    (48) atom -> . ID
    (49) atom -> . ID LPAREN termlist RPAREN
    (39) numexpr -> . LPAREN numexpr RPAREN
    (40) numexpr -> . NUMBER
    (41) numexpr -> . NID
    (42) numexpr -> . numexpr PLUS numexpr
    (43) numexpr -> . numexpr MINUS numexpr
    (44) numexpr -> . numexpr TIMES numexpr

    FORSOME         shift and go to state 8
    FORALL          shift and go to state 10
    ATMOST          shift and go to state 11
    ATLEAST         shift and go to state 13
    EXACTLY         shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 9
    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    NID             shift and go to state 18

    boolexpr                       shift and go to state 116
    atom                           shift and go to state 16
    numexpr                        shift and go to state 17

state 110

    (5) predlist -> ID SLASH NUMBER COMMA predlist .

    SEMICOLON       reduce using rule 5 (predlist -> ID SLASH NUMBER COMMA predlist .)


state 111

    (11) setexpr -> LBRACK NUMBER COMMA . NUMBER RBRACK

    NUMBER          shift and go to state 117


state 112

    (12) setexpr -> LBRACE stringlist RBRACE .

    SEMICOLON       reduce using rule 12 (setexpr -> LBRACE stringlist RBRACE .)
    COMMA           reduce using rule 12 (setexpr -> LBRACE stringlist RBRACE .)
    RPAREN          reduce using rule 12 (setexpr -> LBRACE stringlist RBRACE .)


state 113

    (17) stringlist -> enum COMMA . stringlist
    (14) stringlist -> . enum
    (17) stringlist -> . enum COMMA stringlist
    (15) enum -> . ID
    (16) enum -> . NUMBER

    ID              shift and go to state 100
    NUMBER          shift and go to state 101

    enum                           shift and go to state 99
    stringlist                     shift and go to state 118

state 114

    (25) boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IMPL resolved as shift
  ! shift/reduce conflict for EQVI resolved as shift
    SEMICOLON       reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31

  ! AND             [ reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! XOR             [ reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]


state 115

    (26) boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IMPL resolved as shift
  ! shift/reduce conflict for EQVI resolved as shift
    SEMICOLON       reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31

  ! AND             [ reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! XOR             [ reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]


state 116

    (27) boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .
    (18) boolexpr -> boolexpr . AND boolexpr
    (19) boolexpr -> boolexpr . OR boolexpr
    (20) boolexpr -> boolexpr . XOR boolexpr
    (21) boolexpr -> boolexpr . IMPL boolexpr
    (22) boolexpr -> boolexpr . EQVI boolexpr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IMPL resolved as shift
  ! shift/reduce conflict for EQVI resolved as shift
    SEMICOLON       reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    XOR             shift and go to state 29
    IMPL            shift and go to state 30
    EQVI            shift and go to state 31

  ! AND             [ reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! XOR             [ reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]


state 117

    (11) setexpr -> LBRACK NUMBER COMMA NUMBER . RBRACK

    RBRACK          shift and go to state 119


state 118

    (17) stringlist -> enum COMMA stringlist .

    RBRACE          reduce using rule 17 (stringlist -> enum COMMA stringlist .)


state 119

    (11) setexpr -> LBRACK NUMBER COMMA NUMBER RBRACK .

    SEMICOLON       reduce using rule 11 (setexpr -> LBRACK NUMBER COMMA NUMBER RBRACK .)
    COMMA           reduce using rule 11 (setexpr -> LBRACK NUMBER COMMA NUMBER RBRACK .)
    RPAREN          reduce using rule 11 (setexpr -> LBRACK NUMBER COMMA NUMBER RBRACK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for XOR in state 103 resolved as shift
WARNING: shift/reduce conflict for IMPL in state 103 resolved as shift
WARNING: shift/reduce conflict for EQVI in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for XOR in state 106 resolved as shift
WARNING: shift/reduce conflict for IMPL in state 106 resolved as shift
WARNING: shift/reduce conflict for EQVI in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 114 resolved as shift
WARNING: shift/reduce conflict for OR in state 114 resolved as shift
WARNING: shift/reduce conflict for XOR in state 114 resolved as shift
WARNING: shift/reduce conflict for IMPL in state 114 resolved as shift
WARNING: shift/reduce conflict for EQVI in state 114 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for XOR in state 115 resolved as shift
WARNING: shift/reduce conflict for IMPL in state 115 resolved as shift
WARNING: shift/reduce conflict for EQVI in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for XOR in state 116 resolved as shift
WARNING: shift/reduce conflict for IMPL in state 116 resolved as shift
WARNING: shift/reduce conflict for EQVI in state 116 resolved as shift
